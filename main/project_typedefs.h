#pragma once

#include "stdint.h"
#include "sensor.h"
typedef enum
{
    // MSG FROM NEXTION RX TO MAIN TASK
    HOME_LOADED,
    SYSTEM_SETTINGS_LOADED,
    CALIBRATION_LOADED,
    INPUTCALIBP1_LOADED,
    INPUTCALIBP2_LOADED,
    INPUTCALIBP3_LOADED,
    INPUTCALIBP4_LOADED,
    NUMPAD_POPUP_LOADED,
    NEW_TEST_LOADED,
    INPUTCONFIGP1_LOADED,

    TARA_ENABLED,
    TARA_DISABLED,

    SENSOR_DISABLED,
    SENSOR_ENABLED,

    LIMITS_DISABLED,
    LIMITS_ENABLED,

    INPUTCALIBP1_TYPE_RECEIVED,
    INPUTCALIBP1_CAPACITY_RECEIVED,
    INPUTCALIBP1_CAPACITY_UNIT_RECEIVED,
    INPUTCALIBP1_SENSIBILITY_RECEIVED,
    INPUTCALIBP1_SENSIBILITY_UNIT_RECEIVED,
    INPUTCALIBP1_SENSOR_INDEX_RECEIVED,

    INPUTCALIBP2_CALIBRATION_LIMIT_RECEIVED,
    INPUTCALIBP2_CALIBRATION_LIMIT_UNIT_RECEIVED,
    INPUTCALIBP2_LIMIT_ENABLE_RECEIVED,

    INPUTCALIBP3_TABLE_RECEIVED,
    INPUTCALIBP3_NUM_POINTS_RECEIVED,
    INPUTCALIBP3_ROW_TO_FILL_RECEIVED,

    INPUTCALIBP4_NAME_RECEIVED,
    INPUTCALIBP4_SAVE_PRESSED,

    INPUTCONFIGP1_TYPE_RECEIVED,
    INPUTCONFIGP1_CAPACITY_RECEIVED,
    INPUTCONFIGP1_CAPACITY_UNIT_RECEIVED,
    INPUTCONFIGP1_NAME_RECEIVED,
    INPUTCONFIGP1_INDEX_RECEIVED,
    INPUTCONFIGP1_SAVE_PRESSED,

    NEXTION_UPDATE,

    //
    SENSOR_UNIT_CHANGED,
    SENSOR_READING_RECEIVED,
    SENSOR_CLASS_RECEIVED,

    TEST_EXECUTE,
    NEW_TEST_SET_INDEX1,
    NEW_TEST_SET_INDEX2,
    NEW_TEST_START,
    NEW_TEST_STOP,
    NEW_TEST_DOWNLOAD,

} msg_type_t;

typedef enum
{
    PAGE_HOME = 0,
    PAGE_SYSTEM_SETTINGS = 1,
    PAGE_CALIBRATION = 2,
    PAGE_NUMPAD_POPUP = 3,
    PAGE_DATETIME = 4,
    PAGE_DISPLAY = 5,
    PAGE_SETCALIB_POPUP = 6,
    PAGE_DIR_POPUP = 7,
    PAGE_INPUTCALIBP1 = 8,
    PAGE_INPUTCALIBP2 = 9,
    PAGE_INPUTCALIBP3 = 10,
    PAGE_INPUTCALIBP4 = 11,
    PAGE_KEYBDA = 12,
    PAGE_NEW_TEST = 13,
    PAGE_INTRO = 14,
    PAGE_INPUTCONFIGP1 = 15,
} page_t;

typedef struct
{
    msg_type_t type;
    union
    {
        uint32_t u32;
        float f32;
        int32_t i32;
        void *addr;
        content_reading_t cr;
        content_class_t cc;
        content_str_t cs;
    } content;
    int size;
} msg_t;
